using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace WakaSkies.WakaModelBuilder
{
    /// <summary>
    /// Serialization into the .STL format.
    /// </summary>
    public class STLSerializer
    {
        /// <summary>
        /// Serialize a <see cref="WakaModel"/> into the STL file format.
        /// </summary>
        /// <param name="model">The model to convert.</param>
        /// <returns>A string.</returns>
        public string Serialize(WakaModel model)
        {
            StringBuilder sb = new StringBuilder();
            string solidName = "Generated by WakaSkies 1.0";
            string startSolid = $"solid {solidName}";
            string endSolid = $"endsolid {solidName}";
            string facet = "facet normal ";
            string endFacet = "endfacet";
            string outerLoop = "outer loop";
            string endLoop = "endloop";
            string vertex = "vertex ";

            // start solid ....
            sb.Append(startSolid);
            sb.AppendLine();

            foreach (var face in model.Faces)
            {
                // facet normal x y z
                sb.Append(facet);
                sb.Append(ToSTL(face.Normal));
                sb.AppendLine();

                // outer loop
                sb.Append(outerLoop);
                sb.AppendLine();

                foreach (var point in face.Points)
                {
                    // vertex x y z
                    sb.Append(vertex);
                    sb.Append(ToSTL(point));
                    sb.AppendLine();
                }

                // endloop
                sb.Append(endLoop);
                sb.AppendLine();

                // endfacet
                sb.Append(endFacet);
                sb.AppendLine();
            }

            sb.Append(endSolid);

            return sb.ToString();
        }

        private string ToSTL(Vector3 vector)
        {
            return $"{vector.X} {vector.Y} {vector.Z}";
        }

    }
}
